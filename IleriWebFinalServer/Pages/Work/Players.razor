@page "/players"
@using WEBUI.Model;
@using WEBUI.Service.Base
@inject IPlayersService PlayersService

<PageTitle>Oyuncular</PageTitle>
<div class="container mt-4">
    <div class="row">
        <div class="col-md-8">
            <h2 class="mb-3">Oyuncular Listesi</h2>

            <div class="input-group mb-3">
                <label for="teamCombo" class="input-group-text">Oyuncu Seç:</label>
                <select id="teamCombo" class="form-select" @bind="selectedPlayer">
                    @foreach (var player in comboData)
                    {
                        <option value="@player.id">@player.first_name</option>
                    }
                </select>
                <button class="btn btn-success mx-2" @onclick="@(() => Find())">Ara</button>
                <button class="btn btn-danger mx-2" @onclick="@(() => Clear(1))">Temizle</button>
            </div>

            <div class="input-group mb-3">
                <label for="teamCombo" class="input-group-text">Oyuncu Adı Yaz:</label>
                <input id="teamCombo" type="text" class="form-text" @bind="search">
                <button class="btn btn-success mx-2" @onclick="@(() => FindSearch())">Ara</button>
                <button class="btn btn-danger mx-2" @onclick="@(() => Clear(2))">Temizle</button>
            </div>

            @if (players != null && players.Any())
            {
                <table class="table table-striped table-dark">
                    <thead class="thead-dark">
                        <tr>
                            <th>ID</th>
                            <th>Adı</th>
                            <th>Soyadı</th>
                            <th>Pozisyonu</th>
                            <th>Takımı</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var player in players)
                        {
                            <tr>
                                <td>@player.id</td>
                                <td>@player.first_name</td>
                                <td>@player.last_name</td>
                                <td>@player.position</td>
                                <td>@player.team.name</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="mt-3">Oyuncular bulunamadı.</p>
            }
        </div>
    </div>
</div>

@code {
    private List<WEBUI.Model.Players> players = new List<WEBUI.Model.Players>();
    private List<WEBUI.Model.Players> comboData = new List<WEBUI.Model.Players>();
    private int playerId;
    private string search = "";
    private int selectedPlayer = 149;
    protected override async Task OnInitializedAsync()
    {
        await List();
        comboData = players.ToList();
    }

    async Task List()
    {
        var playerResult = await PlayersService.GetAllPlayersAsync(search);
        if (playerResult != null) players = playerResult.ToList();
        StateHasChanged();
    }

    async Task Find()
    {
        if (selectedPlayer != 0)
        {
            var teamsResult = await PlayersService.GetSpecificPlayer(selectedPlayer);
            if (teamsResult != null)
            {
                players = new List<WEBUI.Model.Players> { teamsResult };
            }
            else
            {
                players = new List<WEBUI.Model.Players>();
            }
            StateHasChanged();
        }
    }
    async Task FindSearch()
    {
        if (string.IsNullOrEmpty(search) != true)
        {
            var playerResult = await PlayersService.GetAllPlayersAsync(search);
            if (playerResult != null) players = playerResult.ToList();
            StateHasChanged();
        }
    }
    async Task Clear(int select)
    {
       if(select == 1) selectedPlayer = 149;
       if (select == 2) search = "";
        players = comboData.ToList();
    }


}
